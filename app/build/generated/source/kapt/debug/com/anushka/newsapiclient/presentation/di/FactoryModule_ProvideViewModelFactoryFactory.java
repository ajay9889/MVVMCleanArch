// Generated by Dagger (https://dagger.dev).
package com.anushka.newsapiclient.presentation.di;

import android.app.Application;
import com.anushka.newsapiclient.domain.usecase.GetNewsHeadLineUseCase;
import com.anushka.newsapiclient.presentation.viewmodel.NewsViewModelFactory;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FactoryModule_ProvideViewModelFactoryFactory implements Factory<NewsViewModelFactory> {
  private final FactoryModule module;

  private final Provider<Application> applicationProvider;

  private final Provider<GetNewsHeadLineUseCase> getNewsHeadLineUseCaseProvider;

  public FactoryModule_ProvideViewModelFactoryFactory(FactoryModule module,
      Provider<Application> applicationProvider,
      Provider<GetNewsHeadLineUseCase> getNewsHeadLineUseCaseProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
    this.getNewsHeadLineUseCaseProvider = getNewsHeadLineUseCaseProvider;
  }

  @Override
  public NewsViewModelFactory get() {
    return provideViewModelFactory(module, applicationProvider.get(), getNewsHeadLineUseCaseProvider.get());
  }

  public static FactoryModule_ProvideViewModelFactoryFactory create(FactoryModule module,
      Provider<Application> applicationProvider,
      Provider<GetNewsHeadLineUseCase> getNewsHeadLineUseCaseProvider) {
    return new FactoryModule_ProvideViewModelFactoryFactory(module, applicationProvider, getNewsHeadLineUseCaseProvider);
  }

  public static NewsViewModelFactory provideViewModelFactory(FactoryModule instance,
      Application application, GetNewsHeadLineUseCase getNewsHeadLineUseCase) {
    return Preconditions.checkNotNullFromProvides(instance.provideViewModelFactory(application, getNewsHeadLineUseCase));
  }
}
